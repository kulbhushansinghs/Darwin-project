setwd("/home/kullu/Desktop/Link to Kullu_desktop/Git/Darwin-project")
setwd("/home/kullu/Desktop/Link to Kullu_desktop/Git/Darwin-project/Data")
d=read.csv("Darwin sample data.csv")
rm(list=ls())
setwd("/home/kullu/Desktop/Link to Kullu_desktop/Git/Darwin-project/Data")
d=read.csv("Darwin sample data.csv")
library(Hmisc)
library(AICcmodavg)
na.pattern(d)
complete.cases(d)
panel.cor <- function(x, y, digits=2, prefix="", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y, method="pearson"))
txt <- format(c(r, 0.123456789), digits=digits)[1]
txt <- paste(prefix, txt, sep="")
if(missing(cex.cor)) cex.cor <- 1.6/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
panel.hist <- function(x, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col="cyan", ...)
}
panel.diagonalLine <- function (x, y, col = par("col"), bg = NA, pch = par("pch"),
cex = 1, col.diagLine = "red", ...)
{
points(x, y, pch = pch, col = col, bg = bg, cex = cex)
ok <- is.finite(x) & is.finite(y)
if (any(ok))
abline(a=0, b=1, col=col.diagLine)
}
pairs(d[,c(12,14,15,16,18,19,20,21,22)], upper.panel=panel.cor,
lower.panel=panel.smooth,
diag.panel=panel.hist)
Cand.models <- list( )
Cand.models[[1]] <- glm(SL ~ NS, data = d)
