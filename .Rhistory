summary(mod6)
B.bear.param <- summary(mod6)$coefficients[2:8,1]
B.bear.ci <- summary(mod6)$coefficients[2:8,2]
mod7 <- lmer(Total_Ibex ~ Age + Gender + Education_ordered + Small_loss + Large_loss + Small_have + Large_have + (1|Country/Community), dat)
summary(mod7)
Ibex.param <- summary(mod7)$coefficients[2:8,1]
Ibex.ci <- summary(mod7)$coefficients[2:8,2]
mod8 <- lmer(Total_Argali ~ Age + Gender + Education_ordered + Small_loss + Large_loss + Small_have + Large_have + (1|Country/Community), dat)
summary(mod8)
Argali.param <- summary(mod8)$coefficients[2:8,1]
Argali.ci <- summary(mod8)$coefficients[2:8,2]
## plotting the modelling results
library(Hmisc)
par(mfrow = c(2,3))
par(mar = c(2,4,3,0.3))
plot(Sl.param, ylim = c(-2,3), ylab = "Parameter estimate", main = "Snow leopard",
xaxt = c("n"), xlab = "", xlim = c(0.5, 7.5))
errbar(seq(1,7,1), Sl.param, Sl.param+(1.96 * Sl.ci), Sl.param - (1.96 * Sl.ci), add= T, lwd = 2, cex =2)
abline(h = 0, lwd =2)
par(mar = c(2,3,3,0.3))
plot(seq(1,7,1), Wolf.param, ylim = c(-2,3), ylab = "Parameter estimate", main = "Wolf",
xaxt = c("n"), xlab = "", xlim = c(0.5, 7.5))
errbar(seq(1,7,1), Wolf.param, Wolf.param+(1.96 * Wolf.ci), Wolf.param - (1.96 * Wolf.ci), add= T, cex = 2, lwd = 2)
abline(h = 0, lwd = 2)
plot(seq(1,7,1), Lynx.param, ylim = c(-2,3), ylab = "Parameter estimate", main = "Lynx",
xaxt = c("n"), xlab = "", xlim = c(0.5, 7.5))
errbar(seq(1,7,1), Lynx.param, Lynx.param+(1.96 * Lynx.ci),
Lynx.param - (1.96 * Lynx.ci), add= T, lwd = 2, cex = 2)
abline(h = 0, lwd = 2)
par(mar = c(6,4,1,0.3))
plot(seq(1,7,1), B.bear.param, ylim = c(-4,3), ylab = "Parameter estimate", main = "Brown bear",
xaxt = c("n"), xlab = "", xlim = c(0.5, 7.5))
errbar(seq(1,7,1), B.bear.param, B.bear.param+(1.96 * B.bear.ci),
B.bear.param - (1.96 * B.bear.ci), add= T, lwd = 2, cex = 2)
abline(h = 0, lwd = 2)
axis(1, labels = c("Age", "Gender\n(male)", "Education",
"Small stock\nlost", "Large stock\nlost", "Small stock\nowned", "Large stock\nowned"),
at = c(1,2,3,4,5,6,7), las = 2)
par(mar = c(6,3,1,0.3))
plot(seq(1,7,1), Ibex.param, ylim = c(-4,3), ylab = "", main = "Ibex",
xaxt = c("n"), xlab = "", xlim = c(0.5, 7.5))
errbar(seq(1,7,1), Ibex.param, Ibex.param+(1.96 * Ibex.ci),
Ibex.param - (1.96 * Ibex.ci), add= T, lwd = 2, cex = 2)
abline(h = 0, lwd = 2)
axis(1, labels = c("Age", "Gender\n(male)", "Education",
"Small stock\nlost", "Large stock\nlost", "Small stock\nowned", "Large stock\nowned"),
at = c(1,2,3,4,5,6,7), las = 2)
plot(Argali.param, ylim = c(-4,3), ylab = "", main = "Argali",
xaxt = c("n"), xlab = "", xlim = c(0.5, 7.5))
errbar(seq(1,7,1), Argali.param, Argali.param+(1.96 * Argali.ci),
Argali.param - (1.96 * Argali.ci), add= T, lwd = 2, cex = 2)
abline(h = 0, lwd = 2)
axis(1, labels = c("Age", "Gender\n(male)", "Education",
"Small stock\nlost", "Large stock\nlost", "Small stock\nowned", "Large stock\nowned"),
at = c(1,2,3,4,5,6,7), las = 2)
#### LMER analysis without livestock data thus includes all complete cases
mod3.1 <- lmer(Total_Snow.leopard ~ Age + Gender + Education_ordered + (1|Country/Community), dat, REML = F)
summary(mod3.1)
Sl.param <- summary(mod3.1)$coefficients[2:4,1]
Sl.ci <- summary(mod3.1)$coefficients[2:4,2]
mod4.1 <- lmer(Total_Wolf ~ Age + Gender + Education_ordered + (1|Country/Community), dat, REML = F)
summary(mod4.1)
Wolf.param <- summary(mod4.1)$coefficients[2:4,1]
Wolf.ci <- summary(mod4.1)$coefficients[2:4,2]
mod5.1 <- lmer(Total_Lynx ~ Age + Gender + Education_ordered + (1|Community), dat, REML = F)
summary(mod5.1)
Lynx.param <- summary(mod5.1)$coefficients[2:4,1]
Lynx.ci <- summary(mod5.1)$coefficients[2:4,2]
mod7.1 <- lmer(Total_Ibex ~ Age + Gender + Education_ordered + (1|Country/Community), dat, REML = F)
summary(mod7.1)
Ibex.param <- summary(mod7.1)$coefficients[2:4,1]
Ibex.ci <- summary(mod7.1)$coefficients[2:4,2]
mod8.1 <- lmer(Total_Argali ~ Age + Gender + Education_ordered +  (1|Country/Community), dat, REML = F)
summary(mod8.1)
Argali.param
mod8.1 <- lmer(Total_Argali ~ Age + Gender + Education_ordered +  (1|Country/Community), dat, REML = F)
summary(mod8.1)
Argali.param <- summary(mod8.1)$coefficients[2:4,1]
Argali.ci <- summary(mod8.1)$coefficients[2:4,2]
Argali.param
Argali.ci
#### LMER analysis without livestock data thus includes all complete cases
mod3.1 <- lmer(Total_Snow.leopard ~ Age + Gender + Education_ordered + (1|Country/Community), dat, REML = F)
summary(mod3.1)
Sl.param <- summary(mod3.1)$coefficients[2:4,1]
Sl.ci <- summary(mod3.1)$coefficients[2:4,2]
mod4.1 <- lmer(Total_Wolf ~ Age + Gender + Education_ordered + (1|Country/Community), dat, REML = F)
summary(mod4.1)
mod5.1 <- lmer(Total_Lynx ~ Age + Gender + Education_ordered + (1|Community), dat, REML = F)
summary(mod5.1)
mod6.1 <- lmer(Total_Brown.bear ~ Age + Gender + Education_ordered + (1|Community), dat, REML = F)
summary(mod6.1)
mod7.1 <- lmer(Total_Ibex ~ Age + Gender + Education_ordered + (1|Country/Community), dat, REML = F)
summary(mod7.1)
mod8.1 <- lmer(Total_Argali ~ Age + Gender + Education_ordered +  (1|Country/Community), dat, REML = F)
summary(mod8.1)
#### Setting working directory
setwd("/Users/Kullu/Dropbox (Snow Leopard Trust)/Kullu_desktop/Git/Darwin-project/Data")
#### Reading data
dat<-read.csv("Year1data.csv")
#### Cleaning data
names(dat)
dat$Country<- as.character(dat$Country)
unique(dat$Country)
which(dat$Country == "Pakistan ") ## These are the entries with mistaken spellings for Pakistan
dat$Country[which(dat$Country == "Pakistan ")]<- "Pakistan" #Correcting the spelling
dat$Community <- as.character(dat$Community)
(table(dat$Community))
dat$Community[which(dat$Community == "Tost ")] <- "Tost"
dat$Community[which(dat$Community == "Gegeet ")] <- "Gegeet"
dat$Community[which(dat$Community == "")]<- NA
table(dat$Age)
hist(dat$Age)
table(dat$Country)
unique(dat$Community[which(dat$Country == "Pakistan")])
unique(dat$Community[which(dat$Country == "Mongolia")])
unique(dat$Community[which(dat$Country == "Kyrgyzstan")])
table(dat$Gender, dat$Country)
dat$Gender[which(dat$Gender == "Fimale")] <- "Female"
dat$Gender[which(dat$Gender == "male")] <- "Male"
table(dat$Education) ## This is too complex to correct using code. I will do this mannually in the datasheet
table(dat$Education_ordered)
table(dat$Gender, dat$Education_ordered)
colnames(dat)[8] <- "Number.of.schemes"
table(dat$Number.of.schemes)
table(dat$Vaccination)
sum(table(dat$Vaccination))
table(dat$Corral.Protection)
sum(table(dat$Corral.Protection))
table(dat$Insurance)
sum(table(dat$Insurance))
table(dat$SLE)
table(dat$Ethics.Approval)
dat$Ethics.Approval[which(dat$Ethics.Approval == "y")]<- "Y"
dat$Ethics.Approval[which(dat$Ethics.Approval == "Yes")]<- "Y"
dat$Ethics.Approval[which(dat$Ethics.Approval == 0)]<- "N"
table(dat$Income)  ## I need to check what scale is this
table(dat$Number.of.family.members)
hist(dat$Number.of.family.members)
table(dat$No.female.family.members)
hist(dat$No.female.family.members)
table(dat$No.male.family.members)
table(dat$Info_SL.conservation) #Useful infomation
table(dat$Type)
table(dat$Often)  # This variable will need to be scaled to a same unit before analysis
table(dat$Others_info_SL.conservation)
table(dat$Info_SL.conservation, dat$Others_info_SL.conservation)
table(dat$Preventive.measures_herding) #This variable will need a lot of cleaning up in the datasheet before use
table(dat$Preventive.measures_corral) #This variable will need a lot of cleaning up in the datasheet before use
table(dat$LS.loss.acceptable) #This variable will need a lot of cleaning up in the datasheet before use
table(dat$Small_loss)
hist(dat$Small_loss)
table(dat$Large_loss)
hist(dat$Large_loss)
table(dat$Small_have)
hist(dat$Small_have)
table(dat$Large_have)
hist(dat$Large_have)
table(dat$Total_Snow.leopard)
hist(dat$Total_Snow.leopard)
table(dat$Total_Wolf)
hist(dat$Total_Wolf)
table(dat$Total_Ibex)
hist(dat$Total_Ibex)
table(dat$Total_Markhor)
hist(dat$Total_Markhor)
table(dat$Total_Argali)
hist(dat$Total_Argali)
table(dat$Total_Lynx)
hist(dat$Total_Lynx)
table(dat$Total_Brown.bear)
hist(dat$Total_Brown.bear)
names(dat)
table(dat$Number.of.schemes)
boxplot(dat$Total_Snow.leopard[which(dat$Number.of.schemes == 0)])
boxplot(dat$Total_Snow.leopard[which(dat$Number.of.schemes == 0)],
dat$Total_Snow.leopard[which(dat$Number.of.schemes == 1)],
dat$Total_Snow.leopard[which(dat$Number.of.schemes >= 2)])
boxplot(dat$Total_Snow.leopard[which(dat$Number.of.schemes == 0)],
dat$Total_Snow.leopard[which(dat$Number.of.schemes == 1)],
dat$Total_Snow.leopard[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"))
boxplot(dat$Total_Snow.leopard[which(dat$Number.of.schemes == 0)],
dat$Total_Snow.leopard[which(dat$Number.of.schemes == 1)],
dat$Total_Snow.leopard[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude")
summary(lm(dat$Total_Snow.leopard~dat$Number.of.schemes))
par(mfrow = c(2,3))
par(mar = c(2,4,3,0.3))
boxplot(dat$Total_Snow.leopard[which(dat$Number.of.schemes == 0)],
dat$Total_Snow.leopard[which(dat$Number.of.schemes == 1)],
dat$Total_Snow.leopard[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score")
boxplot(dat$Total_Wolf[which(dat$Number.of.schemes == 0)],
dat$Total_Wolf[which(dat$Number.of.schemes == 1)],
dat$Total_Wolf[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score")
boxplot(dat$Total_Lynx[which(dat$Number.of.schemes == 0)],
dat$Total_Lynx[which(dat$Number.of.schemes == 1)],
dat$Total_Lynx[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score")
boxplot(dat$Total_Brown.bear[which(dat$Number.of.schemes == 0)],
dat$Total_Brown.bear[which(dat$Number.of.schemes == 1)],
dat$Total_Brown.bear[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score")
boxplot(dat$Total_Ibex[which(dat$Number.of.schemes == 0)],
dat$Total_Ibex[which(dat$Number.of.schemes == 1)],
dat$Total_Ibex[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score")
boxplot(dat$Total_Argali[which(dat$Number.of.schemes == 0)],
dat$Total_Argali[which(dat$Number.of.schemes == 1)],
dat$Total_Argali[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score")
boxplot(dat$Total_Snow.leopard[which(dat$Number.of.schemes == 0)],
dat$Total_Snow.leopard[which(dat$Number.of.schemes == 1)],
dat$Total_Snow.leopard[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score", main = "Snow leopard")
boxplot(dat$Total_Wolf[which(dat$Number.of.schemes == 0)],
dat$Total_Wolf[which(dat$Number.of.schemes == 1)],
dat$Total_Wolf[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score", main = "Wolf")
boxplot(dat$Total_Lynx[which(dat$Number.of.schemes == 0)],
dat$Total_Lynx[which(dat$Number.of.schemes == 1)],
dat$Total_Lynx[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score", main = "Lynx")
boxplot(dat$Total_Brown.bear[which(dat$Number.of.schemes == 0)],
dat$Total_Brown.bear[which(dat$Number.of.schemes == 1)],
dat$Total_Brown.bear[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score", main = "Brown bear")
boxplot(dat$Total_Ibex[which(dat$Number.of.schemes == 0)],
dat$Total_Ibex[which(dat$Number.of.schemes == 1)],
dat$Total_Ibex[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score", main = "Ibex")
boxplot(dat$Total_Argali[which(dat$Number.of.schemes == 0)],
dat$Total_Argali[which(dat$Number.of.schemes == 1)],
dat$Total_Argali[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score", main = "Argali")
par(mar = c(4,4,3,0.3))
par(mfrow = c(2,3))
par(mar = c(2,4,3,0.3))
boxplot(dat$Total_Snow.leopard[which(dat$Number.of.schemes == 0)],
dat$Total_Snow.leopard[which(dat$Number.of.schemes == 1)],
dat$Total_Snow.leopard[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score", main = "Snow leopard")
boxplot(dat$Total_Wolf[which(dat$Number.of.schemes == 0)],
dat$Total_Wolf[which(dat$Number.of.schemes == 1)],
dat$Total_Wolf[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score", main = "Wolf")
boxplot(dat$Total_Lynx[which(dat$Number.of.schemes == 0)],
dat$Total_Lynx[which(dat$Number.of.schemes == 1)],
dat$Total_Lynx[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score", main = "Lynx")
par(mar = c(4,4,3,0.3))
boxplot(dat$Total_Brown.bear[which(dat$Number.of.schemes == 0)],
dat$Total_Brown.bear[which(dat$Number.of.schemes == 1)],
dat$Total_Brown.bear[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score", main = "Brown bear")
boxplot(dat$Total_Ibex[which(dat$Number.of.schemes == 0)],
dat$Total_Ibex[which(dat$Number.of.schemes == 1)],
dat$Total_Ibex[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score", main = "Ibex")
boxplot(dat$Total_Argali[which(dat$Number.of.schemes == 0)],
dat$Total_Argali[which(dat$Number.of.schemes == 1)],
dat$Total_Argali[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score", main = "Argali")
boxplot(dat$Total_Brown.bear[which(dat$Number.of.schemes == 0)],
dat$Total_Brown.bear[which(dat$Number.of.schemes == 1)],
dat$Total_Brown.bear[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score", main = "Brown bear",
xlab = "Number of Schemes")
par(mfrow = c(2,3))
par(mar = c(2,4,3,0.3))
boxplot(dat$Total_Snow.leopard[which(dat$Number.of.schemes == 0)],
dat$Total_Snow.leopard[which(dat$Number.of.schemes == 1)],
dat$Total_Snow.leopard[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score", main = "Snow leopard")
boxplot(dat$Total_Wolf[which(dat$Number.of.schemes == 0)],
dat$Total_Wolf[which(dat$Number.of.schemes == 1)],
dat$Total_Wolf[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score", main = "Wolf")
boxplot(dat$Total_Lynx[which(dat$Number.of.schemes == 0)],
dat$Total_Lynx[which(dat$Number.of.schemes == 1)],
dat$Total_Lynx[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score", main = "Lynx")
par(mar = c(4,4,3,0.3))
boxplot(dat$Total_Brown.bear[which(dat$Number.of.schemes == 0)],
dat$Total_Brown.bear[which(dat$Number.of.schemes == 1)],
dat$Total_Brown.bear[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score", main = "Brown bear",
xlab = "Number of Schemes")
boxplot(dat$Total_Ibex[which(dat$Number.of.schemes == 0)],
dat$Total_Ibex[which(dat$Number.of.schemes == 1)],
dat$Total_Ibex[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score", main = "Ibex",
xlab = "Number of Schemes")
boxplot(dat$Total_Argali[which(dat$Number.of.schemes == 0)],
dat$Total_Argali[which(dat$Number.of.schemes == 1)],
dat$Total_Argali[which(dat$Number.of.schemes >= 2)],
names= c("0", "1", ">2"), ylab = "Attitude score", main = "Argali",
xlab = "Number of Schemes")
summary(lm(dat$Total_Snow.leopard~dat$Number.of.schemes))
summary(lm(dat$Total_Wolf~dat$Number.of.schemes))
summary(lm(dat$Total_Lynx~dat$Number.of.schemes))
summary(lm(dat$Total_Brown.bear~dat$Number.of.schemes))
summary(lm(dat$Total_Ibex~dat$Number.of.schemes))
summary(lm(dat$Total_Argali~dat$Number.of.schemes))
summary(lmer( Total_Snow.leopard~ Number.of.schemes + (1|Country/Community), data = dat))
library(lme4)
summary(lmer( Total_Snow.leopard~ Number.of.schemes + (1|Country/Community), data = dat))
summary(lmer(Total_Wolf~Number.of.schemes + (1|Country/Community), data = dat))
summary(lmer(Total_Lynx~Number.of.schemes+ (1|Country/Community), data = dat))
summary(lmer(Total_Lynx~Number.of.schemes+ (1|Community), data = dat))
summary(lmer(Total_Brown.bear~Number.of.schemes+ (1|Country/Community), data = dat))
summary(lmer(Total_Brown.bear~Number.of.schemes+ (1|Country), data = dat))
summary(lmer(Total_Brown.bear~Number.of.schemes+ (1|Community), data = dat))
summary(lmer(Total_Ibex~Number.of.schemes+ (1|Country/Community), data = dat))
summary(lmer(Total_Argali~Number.of.schemes+ (1|Country/Community), data = dat))
mod.sl <- lmer(Total_Snow.leopard ~ Age + Gender + Education_ordered + Number.of.schemes +
(1|Country/Community), data = dat)
summary(mod.sl)
mod.wolf <- lmer(Total_Wolf ~ Age + Gender + Education_ordered + Number.of.schemes +
(1|Country/Community), data = dat)
summary(mod.wolf)
mod.lynx <- lmer(Total_Lynx ~ Age + Gender + Education_ordered + Number.of.schemes +
(1|Country/Community), data = dat)
summary(mod.lynx)
mod.lynx <- lmer(Total_Lynx ~ Age + Gender + Education_ordered + Number.of.schemes +
(1|Community), data = dat)
summary(mod.lynx)
mod.bb <- lmer(Total_Brown.bear ~ Age + Gender + Education_ordered + Number.of.schemes +
(1|Community), data = dat)
summary(mod.bb)
mod.ibex <- lmer(Total_Ibex ~ Age + Gender + Education_ordered + Number.of.schemes +
(1|Country/Community), data = dat)
summary(mod.ibex)
mod.argali <- lmer(Total_Argali ~ Age + Gender + Education_ordered + Number.of.schemes +
(1|Country/Community), data = dat)
summary(mod.argali)
summary(mod.sl)
summary(mod.wolf)
summary(mod.lynx)
summary(mod.bb)
summary(mod.ibex)
summary(mod.argali)
setwd("/Users/Kullu/Dropbox (Snow Leopard Trust)/Kullu_desktop/Git/Darwin-project/Data")
dat.com<-read.csv("Community level scheme data.csv")
dat.corral<-read.csv("Corral_year 3.csv")
summary(dat.com)
summary(dat.corral)
table(dat.com$Number.Darwin.schemes)
hist(dat.com$HH)
unique(dat.com$Community)
dat.com$Number.Darwin.schemes[which(dat$Country == "India")]
dat.com$Number.Darwin.schemes[which(dat.com$Country == "India")]
dat.com$Community[which(dat.com$Country == "India")]
setwd("/Users/Kullu/Dropbox (Snow Leopard Trust)/Kullu_desktop/Git/Darwin-project/Data")
dat.com<-read.csv("Community level scheme data.csv")
dat.corral<-read.csv("Corral_year 3.csv")
summary(dat.com)
summary(dat.corral)
table(dat.com$Number.Darwin.schemes)
hist(dat.com$HH)
table(dat.com$Corral, dat.com$SLE)
table(dat.com$SLE)
table(dat.com$Insurance, dat.com$SLE)
table(dat.com$Insurance, dat.com$Corral)
table(dat.com$Vaccine)
table(dat.com$Reserve)
par(mfrow = c(2,3))
par(mar=c(4,4,1,1))
boxplot(dat.com$Small.livestock[which(dat.com$Number.Darwin.schemes == 0)],
dat.com$Small.livestock[which(dat.com$Number.Darwin.schemes == 1)],
dat.com$Small.livestock[which(dat.com$Number.Darwin.schemes == 2)],
dat.com$Small.livestock[which(dat.com$Number.Darwin.schemes >= 2)],
names = c("0", "1", "2", ">2"), xlab = "Number of Darwin Schemes",
ylab = "Small stock holding")
boxplot(dat.com$Large.livestock[which(dat.com$Number.Darwin.schemes == 0)],
dat.com$Large.livestock[which(dat.com$Number.Darwin.schemes == 1)],
dat.com$Large.livestock[which(dat.com$Number.Darwin.schemes == 2)],
dat.com$Large.livestock[which(dat.com$Number.Darwin.schemes >= 2)],
names = c("0", "1", "2", ">2"), xlab = "Number of Darwin Schemes",
ylab = "Large stock holding")
boxplot(dat.com$Small_loss[which(dat.com$Number.Darwin.schemes == 0)],
dat.com$Small_loss[which(dat.com$Number.Darwin.schemes == 1)],
dat.com$Small_loss[which(dat.com$Number.Darwin.schemes == 2)],
dat.com$Small_loss[which(dat.com$Number.Darwin.schemes >= 2)],
names = c("0", "1", "2", ">2"), xlab = "Number of Darwin Schemes",
ylab = "Small stock predation")
boxplot(dat.com$Large_loss[which(dat.com$Number.Darwin.schemes == 0)],
dat.com$Large_loss[which(dat.com$Number.Darwin.schemes == 1)],
dat.com$Large_loss[which(dat.com$Number.Darwin.schemes == 2)],
dat.com$Large_loss[which(dat.com$Number.Darwin.schemes >= 2)],
names = c("0", "1", "2", ">2"), xlab = "Number of Darwin Schemes",
ylab = "Large stock predation")
boxplot(dat.com$Small_loss_othercause[which(dat.com$Number.Darwin.schemes == 0)],
dat.com$Small_loss_othercause[which(dat.com$Number.Darwin.schemes == 1)],
dat.com$Small_loss_othercause[which(dat.com$Number.Darwin.schemes == 2)],
dat.com$Small_loss_othercause[which(dat.com$Number.Darwin.schemes >= 2)],
names = c("0", "1", "2", ">2"), xlab = "Number of Darwin Schemes",
ylab = "Small stock killed other causes")
boxplot(dat.com$Large_loss_othercause[which(dat.com$Number.Darwin.schemes == 0)],
dat.com$Large_loss_othercause[which(dat.com$Number.Darwin.schemes == 1)],
dat.com$Large_loss_othercause[which(dat.com$Number.Darwin.schemes == 2)],
dat.com$Large_loss_othercause[which(dat.com$Number.Darwin.schemes >= 2)],
names = c("0", "1", "2", ">2"), xlab = "Number of Darwin Schemes",
ylab = "Large stock Killed other causes")
summary(lm(dat.com$Small.livestock ~ dat.com$Number.Darwin.schemes))
summary(lm(dat.com$Large.livestock ~ dat.com$Number.Darwin.schemes))
summary(lm(dat.com$Small_loss ~ dat.com$Number.Darwin.schemes))
summary(lm(dat.com$Large_loss ~ dat.com$Number.Darwin.schemes))
summary(lm(dat.com$Small_loss_othercause ~ dat.com$Number.Darwin.schemes))
summary(lm(dat.com$Large_loss_othercause ~ dat.com$Number.Darwin.schemes))
par(mfrow = c(2,2))
par(mar=c(4,4,1,1))
boxplot(dat.com$Small.livestock[which(dat.com$Corral == 1)],
dat.com$Small.livestock[which(dat.com$Corral == 0)],
names = c("Corral", "No Corral"), ylab = "Small stock holding")
boxplot(dat.com$Small_loss[which(dat.com$Corral == 1)],
dat.com$Small_loss[which(dat.com$Corral == 0)],
names = c("Corral", "No Corral"), ylab = "Small stock predation")
boxplot(dat.com$Large.livestock[which(dat.com$Corral == 1)],
dat.com$Large.livestock[which(dat.com$Corral == 0)],
names = c("Corral", "No Corral"), ylab = "Large stock holding")
boxplot(dat.com$Large_loss[which(dat.com$Corral == 1)],
dat.com$Large_loss[which(dat.com$Corral == 0)],
names = c("Corral", "No Corral"), ylab = "Large stock predation")
t.test(dat.com$Small.livestock~dat.com$Corral)
t.test(dat.com$Small_loss~dat.com$Corral)
t.test(dat.com$Large.livestock~dat.com$Corral)
t.test(dat.com$Large_loss ~dat.com$Corral)
par(mfrow = c(2,2))
par(mar=c(4,4,1,1))
boxplot(dat.com$Small.livestock[which(dat.com$Insurance == 1)],
dat.com$Small.livestock[which(dat.com$Insurance == 0)],
names = c("Insurance", "No Insurance"), ylab = "Small stock holding")
boxplot(dat.com$Small_loss[which(dat.com$Insurance == 1)],
dat.com$Small_loss[which(dat.com$Insurance == 0)],
names = c("Insurance", "No Insurance"), ylab = "Small stock predation")
boxplot(dat.com$Large.livestock[which(dat.com$Insurance == 1)],
dat.com$Large.livestock[which(dat.com$Insurance == 0)],
names = c("Insurance", "No Insurance"), ylab = "Large stock holding")
boxplot(dat.com$Large_loss[which(dat.com$Insurance == 1)],
dat.com$Large_loss[which(dat.com$Insurance == 0)],
names = c("Insurance", "No Insurance"), ylab = "Large stock predation")
t.test(dat.com$Small.livestock~dat.com$Insurance)
t.test(dat.com$Small_loss~dat.com$Insurance)
t.test(dat.com$Large.livestock~dat.com$Insurance)
t.test(dat.com$Large_loss ~dat.com$Insurance)
par(mfrow = c(2,3))
par(mar=c(4,4,1,1))
boxplot(dat.com$Small.livestock[which(dat.com$Vaccine == 1)],
dat.com$Small.livestock[which(dat.com$Vaccine == 0)],
names = c("Vaccine", "No Vaccine"), ylab = "Small stock holding")
boxplot(dat.com$Small_loss[which(dat.com$Vaccine == 1)],
dat.com$Small_loss[which(dat.com$Vaccine == 0)],
names = c("Vaccine", "No Vaccine"), ylab = "Small stock predation")
boxplot(dat.com$Small_loss_othercause[which(dat.com$Vaccine == 1)],
dat.com$Small_loss_othercause[which(dat.com$Vaccine == 0)],
names = c("Vaccine", "No Vaccine"), ylab = "Small stock killed other causes")
boxplot(dat.com$Large.livestock[which(dat.com$Vaccine == 1)],
dat.com$Large.livestock[which(dat.com$Vaccine == 0)],
names = c("Vaccine", "No Vaccine"), ylab = "Large stock holding")
boxplot(dat.com$Large_loss[which(dat.com$Vaccine == 1)],
dat.com$Large_loss[which(dat.com$Vaccine == 0)],
names = c("Vaccine", "No Vaccine"), ylab = "Large stock predation")
boxplot(dat.com$Large_loss_othercause[which(dat.com$Vaccine == 1)],
dat.com$Large_loss_othercause[which(dat.com$Vaccine == 0)],
names = c("Vaccine", "No Vaccine"), ylab = "Large stock killed other causes")
t.test(dat.com$Small.livestock~dat.com$Vaccine)
t.test(dat.com$Small_loss~dat.com$Vaccine)
t.test(dat.com$Small_loss_othercause~dat.com$Vaccine)
t.test(dat.com$Large.livestock~dat.com$Vaccine)
t.test(dat.com$Large_loss ~dat.com$Vaccine)
t.test(dat.com$Large_loss_othercause~dat.com$Vaccine)
#######################################################################################
###### Corral data analysis
summary(dat.corral)
plot(dat.corral$Small_have~dat.corral$Small_have_owned)
plot(dat.corral$Large_have~dat.corral$Large_have_owned)
plot(dat.corral$Small_have~dat.corral$Small_shut.in_traditional)
abline(1,1)
plot(dat.corral$Small_have~dat.corral$SLT_Small_shut.in, ylim=c(0,1500))
abline(1,1)
plot(dat.corral$Large_have~dat.corral$Large_shut.in_traditional)
plot(dat.corral$Large_have~dat.corral$SLT_Large_shut.in, ylim = c(0,15))
abline(1,1)
barplot(c(sum(dat.corral$Traditional, na.rm = T),
sum(dat.corral$Traditional.predator.proof, na.rm = T),
sum(dat.corral$SLT.predator.proof, na.rm = T)),
names = c("Traditional", "Traditional Pred_proof", "SLT pred_proof"),
ylab = "Number of corrals")
par(mfrow = c(1,2))
boxplot(dat.corral$Small_have [which(dat.corral$SLT.predator.proof == 1)],
dat.corral$Small_have [which(dat.corral$SLT.predator.proof == 0)],
names = c("SLT corral", "No SLT corral"), ylab = "Small stock holding", ylim = c(0,400))
boxplot(dat.corral$Large_have [which(dat.corral$SLT.predator.proof == 1)],
dat.corral$Large_have [which(dat.corral$SLT.predator.proof == 0)],
names = c("SLT corral", "No SLT corral"), ylab = "Large stock holding", ylim = c(0,40))
t.test(dat.corral$Small_have~dat.corral$SLT.predator.proof)
t.test(dat.corral$Large_have~dat.corral$SLT.predator.proof)
par(mfrow = c(1,2))
boxplot(dat.corral$Small_loss_traditional,
dat.corral$SLT_No.loss.in.last.year,
names = c("Traditional corral", "SLT corral"), ylab = "Small stock Killed")
boxplot(dat.corral$Large_loss_traditional,
dat.corral$SLT_No.loss.in.last.year,
names = c("Traditional corral", "SLT corral"), ylab = "Large stock Killed")
small.loss<-cbind(c(dat.corral$Small_loss_traditional, dat.corral$SLT_No.loss.in.last.year))
large.loss<-cbind(c(dat.corral$Large_loss_traditional, dat.corral$SLT_No.loss.in.last.year))
label.corral<-c(rep("Trad", 139), rep("SLT", 139))
t.test(small.loss~label.corral)
t.test(large.loss~label.corral)
